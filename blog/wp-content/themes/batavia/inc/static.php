<?php if ( ! defined( 'ABSPATH' ) ) { die( 'Direct access forbidden.' ); }
/**
 * Include static files: javascript and css
 */

if ( is_admin() ) {
	return;
}


/**
 * Register and Enqueue Google WebFonts Generated by Theme Settings
 * use if confition
 */
$use_custom_typo = '';
$use_custom_typo = zl_option('use_custom_typo');
if( true == $use_custom_typo ): //If Custom Typography Enabled, load font from options, vice versa
	if( function_exists('zl_option') && function_exists('fw_get_db_post_option') ){

		/* Define variables first, to avoid php error notice */
		$menu_font = $post_title_font = $article_heading_font = $widtle_font = $foo_widtle = '';

		/* Get value from theme options */
		$body_font = zl_option('body_font');
		$menu_font = zl_option('menu_font');
		$post_title_font = zl_option('post_title_font');
		$article_heading_font = zl_option('article_heading_font');
		$article_p = zl_option('article_p');
		$widtle_font = zl_option('widtle_font');
		$foo_widtle = zl_option('foo_widtle');

		if( true == $body_font['google_font'] ){
			ZL_google_webfonts::instance()->add($body_font['family'], $body_font['variation']);	
		}

		if( true == $menu_font['google_font'] ){
			ZL_google_webfonts::instance()->add($menu_font['family'], $menu_font['variation']);	
		}

		if( true == $post_title_font['google_font'] ){
			ZL_google_webfonts::instance()->add($post_title_font['family'], $post_title_font['variation']);	
		}

		if( true == $article_heading_font['google_font'] ){
			ZL_google_webfonts::instance()->add($article_heading_font['family'], $article_heading_font['variation']);	
		}

		if( true == $article_p['google_font'] ){
			ZL_google_webfonts::instance()->add($article_p['family'], $article_p['variation']);	
		}

		if( true == $widtle_font['google_font'] ){
			ZL_google_webfonts::instance()->add($widtle_font['family'], $widtle_font['variation']);	
		}

		if( true == $foo_widtle['google_font'] ){
			ZL_google_webfonts::instance()->add($foo_widtle['family'], $foo_widtle['variation']);	
		}

		ZL_google_webfonts::instance()->register_and_enqueue();
	}
endif;

/**
 * Enqueue scripts and styles for the front end.
 */

// Add Droid Serif font, used in the main stylesheet.
if( false == $use_custom_typo ):
	wp_enqueue_style(
		'zl-theme-droidserif',
		fw_theme_font_url(),
		array(),
		'1.0'
	);
endif;

$use_minified_css = 1;
if( false == $use_minified_css ){
	// Foundation
	wp_enqueue_style(
		'zl-foundation',
		get_template_directory_uri() . '/assets/css/foundation.css',
		array(),
		'1.0'
	);

	// Plugins
	wp_enqueue_style(
		'zl-app',
		get_template_directory_uri() . '/assets/css/app.css',
		array(),
		'1.0'
	);

	// Fontello
	wp_enqueue_style(
		'zl-fontello',
		get_template_directory_uri() . '/assets/css/fontello.css',
		array(),
		'1.0'
	);

	// Fontello embed
	wp_enqueue_style(
		'zl-fontello-embedded',
		get_template_directory_uri() . '/assets/css/fontello-embedded.css',
		array(),
		'1.0'
	);

} else {

	wp_enqueue_style(
		'zl-batavia-combined',
		get_template_directory_uri() . '/assets/css/thirdparty.css',
		array(),
		'1.0'
	);

}
// Load our main stylesheet.
wp_enqueue_style(
	'batavia-theme-style',
	get_stylesheet_uri(),
	array(),
	filemtime( get_template_directory() . '/style.css' )
);

// Decide to load custom styling whether from head, or from static css
$compilemethod = '';
$compilemethod = zl_option('compilemethod', 'inline'); // values: 'inline', 'sass'
$upl = zl_upl();
$url = $upl['url'];
$dir = $upl['dir'];
if( 'sass' == $compilemethod AND file_exists( $dir . 'style.css' ) ){
	
	wp_enqueue_style(
		'batavia-custom-styles',
		$url . '/style.css',
		array(),
		filemtime( $dir . 'style.css' )
	);
		
} else {
	/**
	 * Set transient so that the machine would not request option queries every damn time page load.
	 * will be update if administrator hit the save button of theme settings @see hooks.php
	 */
	if ( false === ( $custom_css_min = get_transient('zl_custom_css') ) ){
	   	ob_start();
		require get_template_directory() . '/assets/scss/style.scss.php';
		$custom_css = ob_get_clean();
		$custom_css_min = zl_minify_css($custom_css);
	    set_transient( 'zl_custom_css', $custom_css_min, DAY_IN_SECONDS );
	}
	wp_add_inline_style( 'batavia-theme-style', $custom_css_min );
}

// Load responsive.
wp_enqueue_style(
	'batavia-responsive-style',
	get_template_directory_uri() . '/assets/css/responsive.css',
	array(),
	filemtime( get_template_directory() . '/assets/css/responsive.css' )
);


/*if ( ! is_admin() )
    wp_enqueue_style( 'style-less', get_stylesheet_directory_uri() . '/style.less' );*/

/* ===============================================================================
Javascript
=============================================================================== */

wp_enqueue_script( 'jquery' );

if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {
	wp_enqueue_script( 'comment-reply' );
}

// 3rd Party plugins
wp_enqueue_script(
	'zl-plugins',
	get_template_directory_uri() . '/assets/js/plugins.js',
	array( 'jquery' ),
	'1.0',
	true
);

// The script that runs all necessary effects
wp_enqueue_script(
	'zl-app',
	get_template_directory_uri() . '/assets/js/app.js',
	array( 'jquery' ),
	filemtime( get_template_directory() . '/assets/js/app.js' ),
	true
);

wp_localize_script( 'zl-app', 'simpleLikes', array(
	'ajaxurl' => admin_url( 'admin-ajax.php' ),
	'like' => esc_html__( 'Like', 'batavia' ),
	'unlike' => esc_html__( 'Unlike', 'batavia' )
) ); 

// Custom Script
function zl_footer_script() {
$customjavascript = '';
$customjavascript = zl_option('customjavascript');
?>
<script>
	var $ = jQuery;
	<?php echo zl_pass_html( $customjavascript ); ?>
</script>
<?php
}
add_action( 'wp_footer', 'zl_footer_script', 100 );