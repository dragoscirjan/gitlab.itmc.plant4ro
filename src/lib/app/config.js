/**
 * DO NOT EDIT THIS FILE! IT IS GENERATED AUTOMATICALLY WHEN BUILDING THE PROJECT!
 */
/**
 * Planteaza pentru Romania (http://planteazapentruromania.ro/)
 *
 * @copyright Copyright (c) 2016-present Prietenii Padurilor din Romania (http://prieteniipadurilor.ro)
 * @copyright Copyright (c) 2016-present IT Media Connect (http://itmediaconnect.ro)
 * @license   http://planteazapentruromania.ro/#/application-license Commercial
 */

/**
 * Component for donations
 *
 */
export class AppConfig {

    ENV_DEVELOP = 'development';
    ENV_TESTING = 'testing';
    ENV_STAGING = 'staging';
    ENV_PRODUCT = 'production';

    env = 'staging';

    phpAppBase = '//planteazapentruromania.local/services/index.php/';

    constructor(http) { }

    /**
     * [configHttp description]
     * @method configHttp
     * @param  {aurelia-fetch-client/HttpClient}   http [description]
     * @return {aurelia-fetch-client/HttpClient}        [description]
     */
    configHttp(http) {
        http.configure(config => {
            config
                // .withBaseUrl('services/index.php/')
                .withBaseUrl(this.phpAppBase)
                .withDefaults({
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'AureliaAPI'
                    }
                });
            // console.log(config);
        });
        return http;
    }

    /**
     * [getPhpUrl description]
     * @method getPhpUrl
     * @param  {String}  route [description]
     * @return {String}        [description]
     */
    getPhpUrl(route) {
        return this.phpAppBase + route;
    }

    /**
     * Encoding message to the server side domain
     * @method encode
     * @param  {Object} obj
     * @return {String}
     */
    encode(obj) {
        return btoa(JSON.stringify(obj));
    }

    /**
     * Decoding message from the server side domain
     * @method decode
     * @param  {String} str
     * @return {Object}
     */
    decode(str) {
        return JSON.parse(atob(str));
    }
}
